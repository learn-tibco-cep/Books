--	**********************************************************************
--	TIBCO BusinessEvents 6.2.2.055 (2022-08-08)
--	Using arguments :-c /Users/yxu/work/be6/proj2/Books/BooksPG.cdd -o /Users/yxu/work/be6/perf-test/db/perf -d oracle -ansi true 
--	Copyright(c) 2004-2022 TIBCO Software Inc. All rights reserved.
--	**********************************************************************

DROP TABLE IF EXISTS D_Author;
CREATE TABLE D_Author (author_id char varying(255), name text, revision numeric(19), location text, bio text, birth_date char varying(255), death_date char varying(255), active_date char varying(255), entity_type text, fuller_name text, personal_name text, title text, remote_ids_id$ char varying(128), latest_revision numeric(19), created_tm timestamp, created_tz char varying(100), last_modified_tm timestamp, 
  last_modified_tz char varying(100), website text, wikipedia text, photograph text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_Author_alternate_names;
CREATE TABLE D_Author_alternate_names (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Author_links;
CREATE TABLE D_Author_links (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Author_photos;
CREATE TABLE D_Author_photos (pid$ char varying(128), valPid$ numeric(19), val numeric(19));
DROP TABLE IF EXISTS D_Author_source_records;
CREATE TABLE D_Author_source_records (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Author_edit_logs;
CREATE TABLE D_Author_edit_logs (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Author_rrf$;
CREATE TABLE D_Author_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_AuthorRemoteId;
CREATE TABLE D_AuthorRemoteId (wikidata text, viaf text, isni text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_AuthorRemoteId_rrf$;
CREATE TABLE D_AuthorRemoteId_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_AuthorRole;
CREATE TABLE D_AuthorRole (author char varying(255), role char varying(255), time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_AuthorRole_rrf$;
CREATE TABLE D_AuthorRole_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_Book;
CREATE TABLE D_Book (book_id char varying(255), title text, first_sentence text, ocaid text, translation_of text, by_statement text, weight char varying(255), edition_name text, number_of_pages numeric(19), pagination text, physical_dimensions char varying(255), physical_format char varying(255), copyright_date char varying(255), publish_country char varying(255), publish_date char varying(255), description text, 
  notes text, revision numeric(19), latest_revision numeric(19), last_modified_tm timestamp, last_modified_tz char varying(100), created_tm timestamp, created_tz char varying(100), subtitle text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_Book_publishers;
CREATE TABLE D_Book_publishers (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_authors;
CREATE TABLE D_Book_authors (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_table_of_contents;
CREATE TABLE D_Book_table_of_contents (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Book_links;
CREATE TABLE D_Book_links (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Book_works;
CREATE TABLE D_Book_works (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_identifiers;
CREATE TABLE D_Book_identifiers (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Book_isbn_10;
CREATE TABLE D_Book_isbn_10 (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_isbn_13;
CREATE TABLE D_Book_isbn_13 (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_lccn;
CREATE TABLE D_Book_lccn (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_oclc_numbers;
CREATE TABLE D_Book_oclc_numbers (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_local_id;
CREATE TABLE D_Book_local_id (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_covers;
CREATE TABLE D_Book_covers (pid$ char varying(128), valPid$ numeric(19), val numeric(19));
DROP TABLE IF EXISTS D_Book_languages;
CREATE TABLE D_Book_languages (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_translated_from;
CREATE TABLE D_Book_translated_from (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_subject_place;
CREATE TABLE D_Book_subject_place (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_contributions;
CREATE TABLE D_Book_contributions (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_dewey_decimal_class;
CREATE TABLE D_Book_dewey_decimal_class (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_genres;
CREATE TABLE D_Book_genres (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_lc_classifications;
CREATE TABLE D_Book_lc_classifications (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_other_titles;
CREATE TABLE D_Book_other_titles (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_series;
CREATE TABLE D_Book_series (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_source_records;
CREATE TABLE D_Book_source_records (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_subjects;
CREATE TABLE D_Book_subjects (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_work_title;
CREATE TABLE D_Book_work_title (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_url;
CREATE TABLE D_Book_url (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_uris;
CREATE TABLE D_Book_uris (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_uri_descriptions;
CREATE TABLE D_Book_uri_descriptions (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_publish_places;
CREATE TABLE D_Book_publish_places (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_subject_time;
CREATE TABLE D_Book_subject_time (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Book_edit_logs;
CREATE TABLE D_Book_edit_logs (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Book_rrf$;
CREATE TABLE D_Book_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_BookAuthorXref;
CREATE TABLE D_BookAuthorXref (author_id char varying(255) not null, book_id char varying(255) not null, book_version numeric(19) not null, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255), state$ char(1));
DROP TABLE IF EXISTS D_BookAuthorXref_rrf$;
CREATE TABLE D_BookAuthorXref_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_BookIdentifier;
CREATE TABLE D_BookIdentifier (name char varying(255), time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_BookIdentifier_ids;
CREATE TABLE D_BookIdentifier_ids (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_BookIdentifier_rrf$;
CREATE TABLE D_BookIdentifier_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_Excerpt;
CREATE TABLE D_Excerpt (comment_ text, excerpt text, author char varying(255), time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_Excerpt_rrf$;
CREATE TABLE D_Excerpt_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_Link;
CREATE TABLE D_Link (url text, title text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_Link_rrf$;
CREATE TABLE D_Link_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_AuthorLink;
CREATE TABLE D_AuthorLink (url text, title text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_AuthorLink_rrf$;
CREATE TABLE D_AuthorLink_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_BookLink;
CREATE TABLE D_BookLink (url text, title text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_BookLink_rrf$;
CREATE TABLE D_BookLink_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_WorkLink;
CREATE TABLE D_WorkLink (url text, title text, time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_WorkLink_rrf$;
CREATE TABLE D_WorkLink_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_TableOfContent;
CREATE TABLE D_TableOfContent (title text, level_ numeric(19), time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_TableOfContent_rrf$;
CREATE TABLE D_TableOfContent_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
DROP TABLE IF EXISTS D_Work;
CREATE TABLE D_Work (work_id char varying(255), title text, subtitle text, first_publish_date char varying(255), description text, revision numeric(19), latest_revision numeric(19), created_tm timestamp, created_tz char varying(100), last_modified_tm timestamp, last_modified_tz char varying(100), time_created$ timestamp, time_last_modified$ timestamp, parent$_id$ char varying(128), id$ char varying(128), extId$ char varying(255) not null, state$ char(1));
DROP TABLE IF EXISTS D_Work_authors;
CREATE TABLE D_Work_authors (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Work_covers;
CREATE TABLE D_Work_covers (pid$ char varying(128), valPid$ numeric(19), val numeric(19));
DROP TABLE IF EXISTS D_Work_links;
CREATE TABLE D_Work_links (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Work_lc_classifications;
CREATE TABLE D_Work_lc_classifications (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Work_subjects;
CREATE TABLE D_Work_subjects (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Work_subject_places;
CREATE TABLE D_Work_subject_places (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Work_subject_people;
CREATE TABLE D_Work_subject_people (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Work_subject_times;
CREATE TABLE D_Work_subject_times (pid$ char varying(128), valPid$ numeric(19), val char varying(255));
DROP TABLE IF EXISTS D_Work_excerpts;
CREATE TABLE D_Work_excerpts (pid$ char varying(128), valPid$ numeric(19), id$ char varying(128));
DROP TABLE IF EXISTS D_Work_edit_logs;
CREATE TABLE D_Work_edit_logs (pid$ char varying(128), valPid$ numeric(19), val text);
DROP TABLE IF EXISTS D_Work_rrf$;
CREATE TABLE D_Work_rrf$ (pid$ char varying(128), propertyName$ char varying(255), id$ char varying(128));
CREATE INDEX i_D_Author_alternate_names ON D_Author_alternate_names(PID$);
CREATE INDEX i_D_Author_links ON D_Author_links(PID$);
CREATE INDEX i_D_Author_photos ON D_Author_photos(PID$);
CREATE INDEX i_D_Author_source_records ON D_Author_source_records(PID$);
CREATE INDEX i_D_Author_edit_logs ON D_Author_edit_logs(PID$);
CREATE INDEX i_D_Author_rrf$ ON D_Author_rrf$(PID$);
ALTER TABLE D_Author ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_AuthorRemoteId_rrf$ ON D_AuthorRemoteId_rrf$(PID$);
ALTER TABLE D_AuthorRemoteId ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_AuthorRole_rrf$ ON D_AuthorRole_rrf$(PID$);
ALTER TABLE D_AuthorRole ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_Book_publishers ON D_Book_publishers(PID$);
CREATE INDEX i_D_Book_authors ON D_Book_authors(PID$);
CREATE INDEX i_D_Book_table_of_contents ON D_Book_table_of_contents(PID$);
CREATE INDEX i_D_Book_links ON D_Book_links(PID$);
CREATE INDEX i_D_Book_works ON D_Book_works(PID$);
CREATE INDEX i_D_Book_identifiers ON D_Book_identifiers(PID$);
CREATE INDEX i_D_Book_isbn_10 ON D_Book_isbn_10(PID$);
CREATE INDEX i_D_Book_isbn_13 ON D_Book_isbn_13(PID$);
CREATE INDEX i_D_Book_lccn ON D_Book_lccn(PID$);
CREATE INDEX i_D_Book_oclc_numbers ON D_Book_oclc_numbers(PID$);
CREATE INDEX i_D_Book_local_id ON D_Book_local_id(PID$);
CREATE INDEX i_D_Book_covers ON D_Book_covers(PID$);
CREATE INDEX i_D_Book_languages ON D_Book_languages(PID$);
CREATE INDEX i_D_Book_translated_from ON D_Book_translated_from(PID$);
CREATE INDEX i_D_Book_subject_place ON D_Book_subject_place(PID$);
CREATE INDEX i_D_Book_contributions ON D_Book_contributions(PID$);
CREATE INDEX i_D_Book_dewey_decimal_class ON D_Book_dewey_decimal_class(PID$);
CREATE INDEX i_D_Book_genres ON D_Book_genres(PID$);
CREATE INDEX i_D_Book_lc_classifications ON D_Book_lc_classifications(PID$);
CREATE INDEX i_D_Book_other_titles ON D_Book_other_titles(PID$);
CREATE INDEX i_D_Book_series ON D_Book_series(PID$);
CREATE INDEX i_D_Book_source_records ON D_Book_source_records(PID$);
CREATE INDEX i_D_Book_subjects ON D_Book_subjects(PID$);
CREATE INDEX i_D_Book_work_title ON D_Book_work_title(PID$);
CREATE INDEX i_D_Book_url ON D_Book_url(PID$);
CREATE INDEX i_D_Book_uris ON D_Book_uris(PID$);
CREATE INDEX i_D_Book_uri_descriptions ON D_Book_uri_descriptions(PID$);
CREATE INDEX i_D_Book_publish_places ON D_Book_publish_places(PID$);
CREATE INDEX i_D_Book_subject_time ON D_Book_subject_time(PID$);
CREATE INDEX i_D_Book_edit_logs ON D_Book_edit_logs(PID$);
CREATE INDEX i_D_Book_rrf$ ON D_Book_rrf$(PID$);
ALTER TABLE D_Book ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_BookAuthorXref_rrf$ ON D_BookAuthorXref_rrf$(PID$);
ALTER TABLE D_BookAuthorXref ADD CONSTRAINT pk_D_BookAuthorXref PRIMARY KEY (AUTHOR_ID,BOOK_ID,BOOK_VERSION);
CREATE INDEX i_D_BookIdentifier_ids ON D_BookIdentifier_ids(PID$);
CREATE INDEX i_D_BookIdentifier_rrf$ ON D_BookIdentifier_rrf$(PID$);
ALTER TABLE D_BookIdentifier ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_Excerpt_rrf$ ON D_Excerpt_rrf$(PID$);
ALTER TABLE D_Excerpt ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_Link_rrf$ ON D_Link_rrf$(PID$);
ALTER TABLE D_Link ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_AuthorLink_rrf$ ON D_AuthorLink_rrf$(PID$);
ALTER TABLE D_AuthorLink ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_BookLink_rrf$ ON D_BookLink_rrf$(PID$);
ALTER TABLE D_BookLink ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_WorkLink_rrf$ ON D_WorkLink_rrf$(PID$);
ALTER TABLE D_WorkLink ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_TableOfContent_rrf$ ON D_TableOfContent_rrf$(PID$);
ALTER TABLE D_TableOfContent ADD PRIMARY KEY (EXTID$);
CREATE INDEX i_D_Work_authors ON D_Work_authors(PID$);
CREATE INDEX i_D_Work_covers ON D_Work_covers(PID$);
CREATE INDEX i_D_Work_links ON D_Work_links(PID$);
CREATE INDEX i_D_Work_lc_classifications ON D_Work_lc_classifications(PID$);
CREATE INDEX i_D_Work_subjects ON D_Work_subjects(PID$);
CREATE INDEX i_D_Work_subject_places ON D_Work_subject_places(PID$);
CREATE INDEX i_D_Work_subject_people ON D_Work_subject_people(PID$);
CREATE INDEX i_D_Work_subject_times ON D_Work_subject_times(PID$);
CREATE INDEX i_D_Work_excerpts ON D_Work_excerpts(PID$);
CREATE INDEX i_D_Work_edit_logs ON D_Work_edit_logs(PID$);
CREATE INDEX i_D_Work_rrf$ ON D_Work_rrf$(PID$);
ALTER TABLE D_Work ADD PRIMARY KEY (EXTID$);

CREATE INDEX ix_D_Book_revision ON D_Book(revision);
CREATE INDEX ix_D_Book_last_modified ON D_Book(last_modified_tm);
CREATE INDEX ix_D_Author_revision ON D_Author(revision);
CREATE INDEX ix_D_Author_last_modified ON D_Author(last_modified_tm);

DELETE FROM ClassToTable;
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.Author', 'D_Author');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'alternate_names', 'D_Author_alternate_names');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'edit_logs', 'D_Author_edit_logs');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'links', 'D_Author_links');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'photos', 'D_Author_photos');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'rrf$', 'D_Author_rrf$');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Author', 'source_records', 'D_Author_source_records');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.AuthorLink', 'D_AuthorLink');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.AuthorLink', 'rrf$', 'D_AuthorLink_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.AuthorRemoteId', 'D_AuthorRemoteId');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.AuthorRemoteId', 'rrf$', 'D_AuthorRemoteId_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.AuthorRole', 'D_AuthorRole');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.AuthorRole', 'rrf$', 'D_AuthorRole_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.Book', 'D_Book');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'authors', 'D_Book_authors');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'contributions', 'D_Book_contributions');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'covers', 'D_Book_covers');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'dewey_decimal_class', 'D_Book_dewey_decimal_class');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'edit_logs', 'D_Book_edit_logs');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'genres', 'D_Book_genres');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'identifiers', 'D_Book_identifiers');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'isbn_10', 'D_Book_isbn_10');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'isbn_13', 'D_Book_isbn_13');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'languages', 'D_Book_languages');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'lc_classifications', 'D_Book_lc_classifications');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'lccn', 'D_Book_lccn');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'links', 'D_Book_links');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'local_id', 'D_Book_local_id');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'oclc_numbers', 'D_Book_oclc_numbers');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'other_titles', 'D_Book_other_titles');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'publish_places', 'D_Book_publish_places');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'publishers', 'D_Book_publishers');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'rrf$', 'D_Book_rrf$');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'series', 'D_Book_series');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'source_records', 'D_Book_source_records');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'subject_place', 'D_Book_subject_place');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'subject_time', 'D_Book_subject_time');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'subjects', 'D_Book_subjects');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'table_of_contents', 'D_Book_table_of_contents');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'translated_from', 'D_Book_translated_from');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'uri_descriptions', 'D_Book_uri_descriptions');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'uris', 'D_Book_uris');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'url', 'D_Book_url');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'work_title', 'D_Book_work_title');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Book', 'works', 'D_Book_works');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.BookAuthorXref', 'D_BookAuthorXref');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.BookAuthorXref', 'rrf$', 'D_BookAuthorXref_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.BookIdentifier', 'D_BookIdentifier');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.BookIdentifier', 'ids', 'D_BookIdentifier_ids');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.BookIdentifier', 'rrf$', 'D_BookIdentifier_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.BookLink', 'D_BookLink');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.BookLink', 'rrf$', 'D_BookLink_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.Excerpt', 'D_Excerpt');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Excerpt', 'rrf$', 'D_Excerpt_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.Link', 'D_Link');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Link', 'rrf$', 'D_Link_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.TableOfContent', 'D_TableOfContent');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.TableOfContent', 'rrf$', 'D_TableOfContent_rrf$');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.Work', 'D_Work');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'authors', 'D_Work_authors');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'covers', 'D_Work_covers');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'edit_logs', 'D_Work_edit_logs');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'excerpts', 'D_Work_excerpts');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'lc_classifications', 'D_Work_lc_classifications');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'links', 'D_Work_links');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'rrf$', 'D_Work_rrf$');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'subject_people', 'D_Work_subject_people');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'subject_places', 'D_Work_subject_places');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'subject_times', 'D_Work_subject_times');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.Work', 'subjects', 'D_Work_subjects');
INSERT INTO ClassToTable(classname, tablename) VALUES ('be.gen.Concepts.WorkLink', 'D_WorkLink');
INSERT INTO ClassToTable(classname, fieldName, tablename) VALUES ('be.gen.Concepts.WorkLink', 'rrf$', 'D_WorkLink_rrf$');
DELETE FROM BEAliases;
INSERT INTO BEAliases VALUES ('COLUMN.comment.alias', 'comment_');
INSERT INTO BEAliases VALUES ('COLUMN.level.alias', 'level_');
COMMIT;
